#!/bin/sh

set -x 
function validate() {
  if $(echo $1 | grep \' > /dev/null) ; then
    echo "Single-quote is not allowed in arguments" > /dev/stderr
    exit 1
  fi
}

master=$PT_master
ca_fingerprint=$PT_ca_fingerprint
certname=$PT_certname
alt_names=$PT_dns_alt_names

validate $certname
validate $alt_names

if [ -n "${certname?}" ] ; then
  certname_arg="agent:certname='${certname}' "
fi
if [ -n "${alt_names?}" ] ; then
  alt_names_arg="agent:dns_alt_names='${alt_names}' "
fi

set -e

[ -d /etc/puppetlabs/puppet/ssl/certs ] || mkdir -p /etc/puppetlabs/puppet/ssl/certs
#[ -f /etc/puppetlabs/puppet/ssl/certs/ca.pem ] || echo -n | openssl s_client -connect ${master}:8140 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > /etc/puppetlabs/puppet/ssl/certs/ca.pem
echo -n | openssl s_client -connect ${master}:8140 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > /etc/puppetlabs/puppet/ssl/certs/ca.pem

expected_fingerprint="$(echo ${ca_fingerprint?} | tr '[:lower:]' '[:upper:]')"
if [ -n "${expected_fingerprint?}" ]; then
  actual_fingerprint="$(openssl x509 -fingerprint -in /etc/puppetlabs/puppet/ssl/certs/ca.pem -noout -sha256 | cut -f2 -d=)"
  if [ "${actual_fingerprint?}" != "${expected_fingerprint}" ]; then
    echo "CA fingerprint ${actual_fingerprint?} does not match expected fingerprint ${expected_fingerprint?}"
    exit 1
  fi
fi

curl -s --cacert /etc/puppetlabs/puppet/ssl/certs/ca.pem https://${master}:8140/packages/current/install.bash | bash -s ${certname_arg}${alt_names_arg}

